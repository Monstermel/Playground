/*
  gRPC is a framework for making remote procedure calls (RPC) between different systems.
  It allows programs written in different languages to communicate with each other over
  a network efficiently. It uses Protocol Buffers for defining the structure of messages
  and HTTP/2 for transport, offering features like bidirectional streaming and automatic
  code generation.

  In this example I create a basic service with the option of two differentes calls and the
  definition of the different messages.
*/

syntax = "proto3";

package helloworld;

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}